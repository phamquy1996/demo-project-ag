// Phương thức để thêm hoặc cập nhật một lệnh mới (Order) lên ListView.
// Nếu 'updateItem' != null, nghĩa là chúng ta đang cập nhật một dòng đã có sẵn.
// Nếu 'updateItem' = null, nghĩa là chúng ta sẽ thêm mới vào ListView.
private void AddOrUpdateNewOrder(Order order, ListViewItem updateItem = null)
{
    // Kiểm tra xem có đang cập nhật một dòng sẵn có không
    if (updateItem != null)
    {
        // Lấy order hiện tại đang được gán vào item.Tag
        var currentOrder = (Order)updateItem.Tag;

        // Cập nhật các cột (SubItems) hiển thị thông tin lệnh theo dữ liệu mới
        updateItem.SubItems[1].Text  = order.ShowPrice;
        updateItem.SubItems[2].Text  = order.Volume == 0 ? "" : order.Volume.ToString("N0");
        updateItem.SubItems[3].Text  = order.MatchVol == 0 ? "" : order.MatchVol.ToString("N0");
        updateItem.SubItems[9].Text  = order.MatchVol == 0 ? "" : order.MatchVol.ToString("N0");
        updateItem.SubItems[4].Text  = order.UnmatchVol == 0 ? "" : order.UnmatchVol.ToString("N0");
        updateItem.SubItems[6].Text  = order.Price;
        updateItem.SubItems[8].Text  = order.OrderType;
        updateItem.SubItems[10].Text = order.ActType;
        updateItem.SubItems[11].Text = order.ClientId;
        updateItem.SubItems[13].Text = order.Status;
        updateItem.SubItems[14].Text = order.Side;
        updateItem.SubItems[15].Text = order.Info;
        updateItem.SubItems[16].Text = order.Channel;
        updateItem.SubItems[18].Text = order.Symbol;
        updateItem.SubItems[17].Text = order.ProductCode;

        // Đoạn code dưới đây có vẻ chưa chính xác về mặt cú pháp (có dấu ? : giữa chừng).
        // Giả định ý đồ là nếu currentOrder chưa chứa "FST"/"SLP" và order.ProductCode chứa "ma="
        // thì ta có thể lấy getTakeProfit(...), ngược lại là "" (chuỗi rỗng).
        // Sau đó, ta cập nhật updateItem.SubItems[18] = getStopLoss(...).
        // *Có thể* đây là đoạn code cần được chỉnh lại, mình giữ nguyên logic và chú thích như sau:
        if (!currentOrder.ProductCode.Contains("FST") && !currentOrder.ProductCode.Contains("SLP") 
            && order.ProductCode.Contains("ma=") ? getTakeProfit(order.ProductCode) : "")
        {
            updateItem.SubItems[18].Text = getStopLoss(order.ProductCode.Substring(2, getStopLoss(order.ProductCode).Length - 2));
        }

        // Kiểm tra trạng thái 'Canceled' của lệnh cũ và lệnh mới,
        // nếu cả hai đều có trạng thái Canceled thì đổi màu và kiểu chữ cho cột tương ứng.
        if (currentOrder.Status.Contains(OrderState.Canceled) && order.Status.Contains(OrderState.Canceled))
        {
            updateItem.SubItems[10].BackColor = VBStyleDefinition_Grid_RowCanceled_Color;  // Đổi màu nền
            updateItem.SubItems[11].ForeColor = VBStyleDefinition_Grid_RowCanceled_Color;  // Đổi màu chữ
            updateItem.SubItems[10].Font      = new Font(updateItem.SubItems[10].Font, FontStyle.Bold); // In đậm
        }

        // Kiểm tra giá trị ShowPrice có phải là số hay không
        double n;
        bool isNumeric = double.TryParse(order.ShowPrice, out n);

        // Nếu là số (có thể chuyển sang double)
        if (isNumeric)
        {
            // Nếu màu ForeColor của SubItem[7] chưa bằng màu mong muốn thì set lại
            if (updateItem.SubItems[7].ForeColor != VBStyleDefinition_Grid_RowOtherPrice_Color)
                updateItem.SubItems[7].ForeColor = VBStyleDefinition_Grid_RowOtherPrice_Color;
        }

        // Nếu kênh (Channel) hiện tại của lệnh cũ là rỗng, còn lệnh mới có channel thì cập nhật
        if (currentOrder.Channel == "" && order.Channel != null && order.Channel != "")
        {
            // Cột 15 (theo thứ tự SubItems) là cột Info hay Channel? Tùy logic, ở trên cột 15 ghi là order.Info,
            // cột 16 ghi là order.Channel, nhưng ở đây ta đang cập nhật SubItem[15].Text = order.Channel. 
            // Có thể logic hiển thị của bạn muốn ghi đè ở cột 15.
            updateItem.SubItems[15].Text = order.Channel;
        }

        // Gán Tag lại cho item để lưu order mới (cập nhật)
        updateItem.Tag = order;
    }
    else
    {
        // Nếu chưa có updateItem, nghĩa là ta sẽ thêm mới vào ListView
        // Chuyển OrderNo của order hiện tại (dạng chuỗi) sang số int
        int newOrderId = int.Parse(order.OrderNo);

        // Kiểm tra và cập nhật m_maxOrderId nếu cần
        if (newOrderId > m_maxOrderId)
        {
            m_maxOrderId = newOrderId;
        }

        // Nếu số lượng items trong ListView lớn hơn m_rowCount thì xóa dòng cuối cùng
        // (để giới hạn số dòng hiển thị)
        if (lvOrder.Items.Count > m_rowCount)
        {
            lvOrder.Items.RemoveAt(lvOrder.Items.Count - 1);
        }

        // Thêm item mới vào đầu danh sách (vị trí 0)
        // CreateNewOrderItem(order, true) là một hàm tạo sẵn ListViewItem từ đối tượng Order.
        lvOrder.Items.Insert(0, CreateNewOrderItem(order, true));
    }
}
